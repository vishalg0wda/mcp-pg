/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A short code indicating the error code returned.
 */
export const RateLimitExceededCode$zodSchema = z.enum([
  "rate_limit_exceeded",
]).describe("A short code indicating the error code returned.");

export type RateLimitExceededCode = z.infer<
  typeof RateLimitExceededCode$zodSchema
>;

export type RateLimitExceededError = {
  code: RateLimitExceededCode;
  message: string;
  doc_url?: string | undefined;
};

export const RateLimitExceededError$zodSchema: z.ZodType<
  RateLimitExceededError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: RateLimitExceededCode$zodSchema,
  doc_url: z.string().optional(),
  message: z.string(),
});

/**
 * The user has sent too many requests in a given amount of time ("rate limiting")
 */
export type RateLimitExceeded = { error: RateLimitExceededError };

export const RateLimitExceeded$zodSchema: z.ZodType<
  RateLimitExceeded,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.lazy(() => RateLimitExceededError$zodSchema),
}).describe(
  "The user has sent too many requests in a given amount of time (\"rate limiting\")",
);
