/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A short code indicating the error code returned.
 */
export const InviteExpiredCode$zodSchema = z.enum([
  "invite_expired",
]).describe("A short code indicating the error code returned.");

export type InviteExpiredCode = z.infer<typeof InviteExpiredCode$zodSchema>;

export type InviteExpiredError = {
  code: InviteExpiredCode;
  message: string;
  doc_url?: string | undefined;
};

export const InviteExpiredError$zodSchema: z.ZodType<
  InviteExpiredError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: InviteExpiredCode$zodSchema,
  doc_url: z.string().optional(),
  message: z.string(),
});

/**
 * This response is sent when the requested content has been permanently deleted from server, with no forwarding address.
 */
export type InviteExpired = { error: InviteExpiredError };

export const InviteExpired$zodSchema: z.ZodType<
  InviteExpired,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.lazy(() => InviteExpiredError$zodSchema),
}).describe(
  "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
);
