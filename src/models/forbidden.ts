/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A short code indicating the error code returned.
 */
export const ForbiddenCode$zodSchema = z.enum([
  "forbidden",
]).describe("A short code indicating the error code returned.");

export type ForbiddenCode = z.infer<typeof ForbiddenCode$zodSchema>;

export type ForbiddenError = {
  code: ForbiddenCode;
  message: string;
  doc_url?: string | undefined;
};

export const ForbiddenError$zodSchema: z.ZodType<
  ForbiddenError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: ForbiddenCode$zodSchema,
  doc_url: z.string().optional(),
  message: z.string(),
});

/**
 * The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.
 */
export type Forbidden = { error: ForbiddenError };

export const Forbidden$zodSchema: z.ZodType<Forbidden, z.ZodTypeDef, unknown> =
  z.object({
    error: z.lazy(() => ForbiddenError$zodSchema),
  }).describe(
    "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
  );
