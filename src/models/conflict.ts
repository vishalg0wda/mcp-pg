/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A short code indicating the error code returned.
 */
export const ConflictCode$zodSchema = z.enum([
  "conflict",
]).describe("A short code indicating the error code returned.");

export type ConflictCode = z.infer<typeof ConflictCode$zodSchema>;

export type ConflictError = {
  code: ConflictCode;
  message: string;
  doc_url?: string | undefined;
};

export const ConflictError$zodSchema: z.ZodType<
  ConflictError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: ConflictCode$zodSchema,
  doc_url: z.string().optional(),
  message: z.string(),
});

/**
 * This response is sent when a request conflicts with the current state of the server.
 */
export type Conflict = { error: ConflictError };

export const Conflict$zodSchema: z.ZodType<Conflict, z.ZodTypeDef, unknown> = z
  .object({
    error: z.lazy(() => ConflictError$zodSchema),
  }).describe(
    "This response is sent when a request conflicts with the current state of the server.",
  );
