/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A short code indicating the error code returned.
 */
export const NotFoundCode$zodSchema = z.enum([
  "not_found",
]).describe("A short code indicating the error code returned.");

export type NotFoundCode = z.infer<typeof NotFoundCode$zodSchema>;

export type NotFoundError = {
  code: NotFoundCode;
  message: string;
  doc_url?: string | undefined;
};

export const NotFoundError$zodSchema: z.ZodType<
  NotFoundError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: NotFoundCode$zodSchema,
  doc_url: z.string().optional(),
  message: z.string(),
});

/**
 * The server cannot find the requested resource.
 */
export type NotFound = { error: NotFoundError };

export const NotFound$zodSchema: z.ZodType<NotFound, z.ZodTypeDef, unknown> = z
  .object({
    error: z.lazy(() => NotFoundError$zodSchema),
  }).describe("The server cannot find the requested resource.");
