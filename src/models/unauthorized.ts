/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A short code indicating the error code returned.
 */
export const UnauthorizedCode$zodSchema = z.enum([
  "unauthorized",
]).describe("A short code indicating the error code returned.");

export type UnauthorizedCode = z.infer<typeof UnauthorizedCode$zodSchema>;

export type UnauthorizedError = {
  code: UnauthorizedCode;
  message: string;
  doc_url?: string | undefined;
};

export const UnauthorizedError$zodSchema: z.ZodType<
  UnauthorizedError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: UnauthorizedCode$zodSchema,
  doc_url: z.string().optional(),
  message: z.string(),
});

/**
 * Although the HTTP standard specifies "unauthorized", semantically this response means "unauthenticated". That is, the client must authenticate itself to get the requested response.
 */
export type Unauthorized = { error: UnauthorizedError };

export const Unauthorized$zodSchema: z.ZodType<
  Unauthorized,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.lazy(() => UnauthorizedError$zodSchema),
}).describe(
  "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
);
